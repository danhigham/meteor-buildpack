#!/usr/bin/env ruby

require 'fileutils'
require 'tmpdir'
require 'json'

$stdout.sync = true

def install_meteor(build_path, cache_path)
  puts "-----> Installing Meteor"

  FileUtils.mkdir_p ENV['HOME']

  meteor_build_dir = "#{build_path}/meteor"
  FileUtils.mkdir_p meteor_build_dir

  `curl https://install.meteor.com | HOME=#{meteor_build_dir} /bin/sh 2>&1`
end

def setup_environment(build_path)
  puts "-----> Setting up environment"

  app = JSON.parse(ENV["VCAP_APPLICATION"])
  services = JSON.parse(ENV["VCAP_SERVICES"])
  mongo_url = services.find { |key,value| value[0]['tags'].include? 'mongodb' }[1][0]['credentials']['uri']

  profile_dir = "#{build_path}/.profile.d"
  FileUtils.mkdir_p profile_dir

  profile_content = <<-eos
  #!/usr/bin/env ruby
  export ROOT_URL=#{app["application_uris"][0]}
  export MONGO_URL=#{mongo_url}
  eos

  File.open("#{profile_dir}/meteor.sh", 'w') {|f| f.write(profile_content) }
end

def sync_app_from_bucket(build_path)

  puts "-----> Syncing from S3 bucket"

  # if S3 bucket exists, download files
  s3_env_keys = %w{ AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY S3_BUCKET }
  return unless s3_env_keys.collect{ |e| ENV.has_key? e }.all?

  begin
    require 'aws/s3'
  rescue LoadError
    `gem install aws-s3`
    retry
  end

end

def install_rbenv(build_path)
  FileUtils.mkdir_p "#{ENV['HOME']}/.rbenv"
  `git clone https://github.com/sstephenson/rbenv.git ~/.rbenv`
  `export PATH="$HOME/.rbenv/bin:$PATH"`
  `eval "$(rbenv init -)"`
end

install_meteor ARGV[0], ARGV[1]
setup_environment ARGV[0]
install_rbenv ARGV[0]

sync_app_from_bucket ARGV[0]
